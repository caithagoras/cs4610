Programming Assignment 3 - The Parser
CS4610
Leiqing Cai

Part of the parser was generated by Jison.

Design Decisions:
    1. let expression
        Assume we are to parse an expression: let x:X in a OP b
        Two possibility exists according to the syntax definition of let:
            - (let x:X in a) OP b
            - let x:X in (a OP b)
        The latter one is desired. Therefore, let should have the lowest precedence over all other operators. Defining the precedence for let eliminates the ambiguity.

    2. Program flow
        In the main JS program, inputs are read into a list of token. Each token is a list (of three elements): [line_number, token, lexeme]
        The faked lexer return a token and place [line_number, lexeme] into yytext for the parser to use.
        In the parser, line number of tokens are retrieved from yytext, and line number for non-terminals (i.e. expression) are retrieved by the first element in semantic value of the first symbol in the production string.
        For example: expr -> expr + expr. If this production rule is matched, then the line number of this expression is the line number of the first expr on the right-hand-side of ->.
        The semantic value of the program (and other non-terminals) are stored as nested list, for the main JS program to output.

    3. Error Handling
        The function "parser.yy.parseError(str, hash)" is over-written in order to throw a list, containing the line number and the token. The main program use a try-catch statement to catch the error, output error message to standard output and exit the process.

Test Cases:
    good.cl includes most Cool constructs
        - classes w/ and w/o inherits
        - classes w/ and w/o features
        - attributes w/ and w/o initialization
        - methods w/ and w/o formal parameters
        - All form of expression:
            - if, while, let, case, block
            - arithmetic, relational, logical expressions
            - literals, identifiers, parenthesized expressions, dispatches
            - other expressions: isvoid, new

    bad.cl
        - block with no expression in it is disallowed.

        